'use client';

import { useEffect, useState } from 'react';
import { fetchStats } from '../services/apiService';

type ParseStatistics = {
    totalParsed: number;
    totalFailed: number;
    lastSuccess: string | null;
    lastFailure: string | null;
    avgParseDurationMs: number | null;
};

const Footer = () => {
    const [stats, setStats] = useState<ParseStatistics | null>(null);
    const [loading, setLoading] = useState(true);

    useEffect(() => {
        const loadStats = async () => {
            try {
                const data = await fetchStats();
                setStats(data);
            } catch {
                // –û—à–∏–±–∫–∞ —É–∂–µ –ø–æ–∫–∞–∑–∞–Ω–∞ toast-–æ–º
            } finally {
                setLoading(false);
            }
        };

        loadStats();
    }, []);

    return (
        <footer style={{ padding: '1rem', background: '#f2f2f2', fontSize: '0.9rem', marginTop: 'auto' }}>
            {loading && <div>–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...</div>}
            {stats && (
                <div>
                    <div>‚úÖ –£—Å–ø–µ—à–Ω–æ —Ä–∞–∑–æ–±—Ä–∞–Ω–æ: {stats.totalParsed}</div>
                    <div>‚ùå –û—à–∏–±–æ–∫: {stats.totalFailed}</div>
                    <div>üìà –°—Ä. –≤—Ä–µ–º—è —Ä–∞–∑–±–æ—Ä–∞: {stats.avgParseDurationMs?.toFixed(2)} –º—Å</div>
                    <div>üïí –ü–æ—Å–ª–µ–¥–Ω–∏–π —É—Å–ø–µ—Ö: {stats.lastSuccess ? new Date(stats.lastSuccess).toLocaleString() : '‚Äî'}</div>
                    <div>üïí –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {stats.lastFailure ? new Date(stats.lastFailure).toLocaleString() : '‚Äî'}</div>
                </div>
            )}
        </footer>
    );
};

export default Footer;